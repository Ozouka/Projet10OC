name: Frontend CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test-frontend:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    defaults:
      run:
        working-directory: front
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: front/package-lock.json
          
      - name: Install dependencies
        run: npm ci
          
      - name: Run Angular tests with coverage
        run: npm run test -- --code-coverage --browsers=ChromeHeadless --no-watch
          
      - name: List coverage directory
        run: ls -la coverage/bobapp
          
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: code-coverage-report
          path: ${{ github.workspace }}/front/coverage/bobapp/**

  sonarcloud-frontend:
    needs: test-frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: front/package-lock.json

      - name: Install dependencies
        run: |
          cd front
          npm ci

      - name: Run tests with coverage for SonarCloud
        run: |
          cd front
          npm run test -- --code-coverage --browsers=ChromeHeadless --no-watch

      - name: SonarCloud Scan Frontend
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: front

  docker-frontend:
    needs: [test-frontend, sonarcloud-frontend]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: front

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t bob-app-front .
          docker tag bob-app-front ${{ secrets.DOCKER_USERNAME }}/bob-app-front:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/bob-app-front:latest
